# Postgres configurations - comment lines below if you're not using Postgres
CUBEJS_DB_HOST=host.docker.internal
CUBEJS_DB_PORT=5432
CUBEJS_DB_NAME=plio
CUBEJS_DB_USER=postgres
CUBEJS_DB_PASS=''
CUBEJS_DB_TYPE=postgres

# BigQuery configurations - uncomment lines below if you're using BigQuery
# CUBEJS_DB_BQ_PROJECT_ID=
# CUBEJS_DB_BQ_CREDENTIALS=
# CUBEJS_DB_BQ_LOCATION=
# CUBEJS_DB_TYPE=

# generic
CUBEJS_API_SECRET='' # random 32-digit base64 string - generate from https://generate.plus/en/base64
CUBEJS_DEV_MODE=true

PORT=4000

# local web server
APP_DASHBOARD_PORT=3000

# redis configuration
CUBEJS_REDIS_URL='redis://host.docker.internal:6379'
CUBEJS_REDIS_PASSWORD=''
CUBEJS_REDIS_TLS=false

# Set to true to make a Cube.js instance act as a refresh worker
CUBEJS_SCHEDULED_REFRESH_TIMER=false

# authentication in production mode
CUBEJS_JWK_URL=''
CUBEJS_JWT_ISSUER=''
CUBEJS_JWT_ALGS=''
CUBEJS_JWT_CLAIMS_NAMESPACE=''
CUBEJS_JWT_AUDIENCE=''

# Run the following query in your postgresql to retrive the list of organization schemas
# SELECT string_agg(schema_name, ',') FROM public.organization;
PLIO_ORGANIZATIONS_SCHEMAS=''
